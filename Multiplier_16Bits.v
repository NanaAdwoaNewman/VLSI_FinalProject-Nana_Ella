/* Generated by Yosys 0.18+40 (git sha1 42721b6a1, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module Multiplier_16Bits(X, Y, Z);
  wire [15:0] _00_;
  wire [15:0] _01_;
  wire [15:0] _02_;
  wire [15:0] _03_;
  wire [15:0] _04_;
  wire [15:0] _05_;
  wire [15:0] _06_;
  wire [15:0] _07_;
  wire [31:0] _08_;
  wire _09_;
  wire [31:0] _10_;
  wire [15:0] _11_;
  wire _12_;
  wire [31:0] _13_;
  wire _14_;
  wire [31:0] _15_;
  wire _16_;
  wire [31:0] _17_;
  wire _18_;
  wire [31:0] _19_;
  wire _20_;
  wire [31:0] _21_;
  wire [15:0] _22_;
  wire _23_;
  wire [31:0] _24_;
  wire _25_;
  wire [31:0] _26_;
  wire _27_;
  wire [31:0] _28_;
  wire _29_;
  wire [31:0] _30_;
  wire _31_;
  wire [31:0] _32_;
  wire [15:0] _33_;
  wire _34_;
  wire [31:0] _35_;
  wire _36_;
  wire [31:0] _37_;
  wire _38_;
  wire [31:0] _39_;
  wire _40_;
  wire [31:0] _41_;
  wire _42_;
  wire [31:0] _43_;
  wire [15:0] _44_;
  wire _45_;
  wire [31:0] _46_;
  wire _47_;
  wire [31:0] _48_;
  wire _49_;
  wire [31:0] _50_;
  wire _51_;
  wire [31:0] _52_;
  wire _53_;
  wire [31:0] _54_;
  wire [15:0] _55_;
  wire _56_;
  wire [31:0] _57_;
  wire _58_;
  wire [31:0] _59_;
  wire _60_;
  wire [31:0] _61_;
  wire _62_;
  wire [31:0] _63_;
  wire _64_;
  wire [31:0] _65_;
  wire [15:0] _66_;
  wire _67_;
  wire [31:0] _68_;
  wire _69_;
  wire [31:0] _70_;
  wire _71_;
  wire [31:0] _72_;
  wire _73_;
  wire [31:0] _74_;
  wire _75_;
  wire [15:0] _76_;
  wire [15:0] _77_;
  input [15:0] X;
  wire [15:0] X;
  input [15:0] Y;
  wire [15:0] Y;
  output [31:0] Z;
  wire [31:0] Z;
  wire [15:0] f;
  wire [15:0] g;
  wire [15:0] h;
  wire [15:0] i;
  wire [15:0] j;
  wire [15:0] k;
  wire [15:0] l;
  wire [15:0] m;
  wire [15:0] n;
  wire [15:0] o;
  wire [31:0] out1;
  wire [31:0] out10;
  wire [31:0] out11;
  wire [31:0] out12;
  wire [31:0] out13;
  wire [31:0] out14;
  wire [31:0] out15;
  wire [31:0] out16;
  wire [31:0] out17;
  wire [31:0] out18;
  wire [31:0] out19;
  wire [31:0] out2;
  wire [31:0] out20;
  wire [31:0] out21;
  wire [31:0] out22;
  wire [31:0] out23;
  wire [31:0] out24;
  wire [31:0] out25;
  wire [31:0] out26;
  wire [31:0] out27;
  wire [31:0] out28;
  wire [31:0] out29;
  wire [31:0] out3;
  wire [31:0] out30;
  wire [31:0] out31;
  wire [31:0] out4;
  wire [31:0] out5;
  wire [31:0] out6;
  wire [31:0] out7;
  wire [31:0] out8;
  wire [31:0] out9;
  wire [15:0] p;
  wire [15:0] q;
  wire [15:0] r;
  wire [15:0] s;
  wire [15:0] t;
  wire [15:0] u;
  Ripple_Adder_32Bits ra320 (
    .AAAA({ f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f[15], f }),
    .BBBB({ g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g[15], g, 1'h0 }),
    .Cin4(1'h0),
    .Cout4(_09_),
    .YYYY(_08_)
  );
  Ripple_Adder_32Bits ra321 (
    .AAAA(out1),
    .BBBB({ h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h[15], h, 2'h0 }),
    .Cin4(1'h0),
    .Cout4(_12_),
    .YYYY(_10_)
  );
  Ripple_Adder_32Bits ra3210 (
    .AAAA(out10),
    .BBBB({ q[15], q[15], q[15], q[15], q[15], q, 11'h000 }),
    .Cin4(1'h0),
    .Cout4(_31_),
    .YYYY(_30_)
  );
  Ripple_Adder_32Bits ra3211 (
    .AAAA(out11),
    .BBBB({ r[15], r[15], r[15], r[15], r, 12'h000 }),
    .Cin4(1'h0),
    .Cout4(_34_),
    .YYYY(_32_)
  );
  Ripple_Adder_32Bits ra3212 (
    .AAAA(out12),
    .BBBB({ s[15], s[15], s[15], s, 13'h0000 }),
    .Cin4(1'h0),
    .Cout4(_36_),
    .YYYY(_35_)
  );
  Ripple_Adder_32Bits ra3213 (
    .AAAA(out13),
    .BBBB({ t[15], t[15], t, 14'h0000 }),
    .Cin4(1'h0),
    .Cout4(_38_),
    .YYYY(_37_)
  );
  Ripple_Adder_32Bits ra3214 (
    .AAAA(out14),
    .BBBB({ u[15], u, 15'h0000 }),
    .Cin4(1'h0),
    .Cout4(_40_),
    .YYYY(_39_)
  );
  Ripple_Adder_32Bits ra3215 (
    .AAAA(out15),
    .BBBB({ u, 16'h0000 }),
    .Cin4(1'h0),
    .Cout4(_42_),
    .YYYY(_41_)
  );
  Ripple_Adder_32Bits ra3216 (
    .AAAA(out16),
    .BBBB({ u[14:0], 17'h00000 }),
    .Cin4(1'h0),
    .Cout4(_45_),
    .YYYY(_43_)
  );
  Ripple_Adder_32Bits ra3217 (
    .AAAA(out17),
    .BBBB({ u[13:0], 18'h00000 }),
    .Cin4(1'h0),
    .Cout4(_47_),
    .YYYY(_46_)
  );
  Ripple_Adder_32Bits ra3218 (
    .AAAA(out18),
    .BBBB({ u[12:0], 19'h00000 }),
    .Cin4(1'h0),
    .Cout4(_49_),
    .YYYY(_48_)
  );
  Ripple_Adder_32Bits ra3219 (
    .AAAA(out19),
    .BBBB({ u[11:0], 20'h00000 }),
    .Cin4(1'h0),
    .Cout4(_51_),
    .YYYY(_50_)
  );
  Ripple_Adder_32Bits ra322 (
    .AAAA(out2),
    .BBBB({ i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i[15], i, 3'h0 }),
    .Cin4(1'h0),
    .Cout4(_14_),
    .YYYY(_13_)
  );
  Ripple_Adder_32Bits ra3220 (
    .AAAA(out20),
    .BBBB({ u[10:0], 21'h000000 }),
    .Cin4(1'h0),
    .Cout4(_53_),
    .YYYY(_52_)
  );
  Ripple_Adder_32Bits ra3221 (
    .AAAA(out21),
    .BBBB({ u[9:0], 22'h000000 }),
    .Cin4(1'h0),
    .Cout4(_56_),
    .YYYY(_54_)
  );
  Ripple_Adder_32Bits ra3222 (
    .AAAA(out22),
    .BBBB({ u[8:0], 23'h000000 }),
    .Cin4(1'h0),
    .Cout4(_58_),
    .YYYY(_57_)
  );
  Ripple_Adder_32Bits ra3223 (
    .AAAA(out23),
    .BBBB({ u[7:0], 24'h000000 }),
    .Cin4(1'h0),
    .Cout4(_60_),
    .YYYY(_59_)
  );
  Ripple_Adder_32Bits ra3224 (
    .AAAA(out24),
    .BBBB({ u[6:0], 25'h0000000 }),
    .Cin4(1'h0),
    .Cout4(_62_),
    .YYYY(_61_)
  );
  Ripple_Adder_32Bits ra3225 (
    .AAAA(out25),
    .BBBB({ u[5:0], 26'h0000000 }),
    .Cin4(1'h0),
    .Cout4(_64_),
    .YYYY(_63_)
  );
  Ripple_Adder_32Bits ra3226 (
    .AAAA(out26),
    .BBBB({ u[4:0], 27'h0000000 }),
    .Cin4(1'h0),
    .Cout4(_67_),
    .YYYY(_65_)
  );
  Ripple_Adder_32Bits ra3227 (
    .AAAA(out27),
    .BBBB({ u[3:0], 28'h0000000 }),
    .Cin4(1'h0),
    .Cout4(_69_),
    .YYYY(_68_)
  );
  Ripple_Adder_32Bits ra3228 (
    .AAAA(out28),
    .BBBB({ u[2:0], 29'h00000000 }),
    .Cin4(1'h0),
    .Cout4(_71_),
    .YYYY(_70_)
  );
  Ripple_Adder_32Bits ra3229 (
    .AAAA(out29),
    .BBBB({ u[1:0], 30'h00000000 }),
    .Cin4(1'h0),
    .Cout4(_73_),
    .YYYY(_72_)
  );
  Ripple_Adder_32Bits ra323 (
    .AAAA(out3),
    .BBBB({ j[15], j[15], j[15], j[15], j[15], j[15], j[15], j[15], j[15], j[15], j[15], j[15], j, 4'h0 }),
    .Cin4(1'h0),
    .Cout4(_16_),
    .YYYY(_15_)
  );
  Ripple_Adder_32Bits ra3230 (
    .AAAA(out30),
    .BBBB({ u[0], 31'h00000000 }),
    .Cin4(1'h0),
    .Cout4(_75_),
    .YYYY(_74_)
  );
  Ripple_Adder_32Bits ra324 (
    .AAAA(out4),
    .BBBB({ k[15], k[15], k[15], k[15], k[15], k[15], k[15], k[15], k[15], k[15], k[15], k, 5'h00 }),
    .Cin4(1'h0),
    .Cout4(_18_),
    .YYYY(_17_)
  );
  Ripple_Adder_32Bits ra325 (
    .AAAA(out5),
    .BBBB({ l[15], l[15], l[15], l[15], l[15], l[15], l[15], l[15], l[15], l[15], l, 6'h00 }),
    .Cin4(1'h0),
    .Cout4(_20_),
    .YYYY(_19_)
  );
  Ripple_Adder_32Bits ra326 (
    .AAAA(out6),
    .BBBB({ m[15], m[15], m[15], m[15], m[15], m[15], m[15], m[15], m[15], m, 7'h00 }),
    .Cin4(1'h0),
    .Cout4(_23_),
    .YYYY(_21_)
  );
  Ripple_Adder_32Bits ra327 (
    .AAAA(out7),
    .BBBB({ n[15], n[15], n[15], n[15], n[15], n[15], n[15], n[15], n, 8'h00 }),
    .Cin4(1'h0),
    .Cout4(_25_),
    .YYYY(_24_)
  );
  Ripple_Adder_32Bits ra328 (
    .AAAA(out8),
    .BBBB({ o[15], o[15], o[15], o[15], o[15], o[15], o[15], o, 9'h000 }),
    .Cin4(1'h0),
    .Cout4(_27_),
    .YYYY(_26_)
  );
  Ripple_Adder_32Bits ra329 (
    .AAAA(out9),
    .BBBB({ p[15], p[15], p[15], p[15], p[15], p[15], p, 10'h000 }),
    .Cin4(1'h0),
    .Cout4(_29_),
    .YYYY(_28_)
  );
  SingleBitMultiplier_16 sbm0 (
    .D(X),
    .E(Y),
    .F1(_00_),
    .G1(_11_),
    .H1(_22_),
    .I1(_33_),
    .J1(_44_),
    .K1(_55_),
    .L1(_66_),
    .M1(_76_),
    .N1(_77_),
    .O1(_01_),
    .P1(_02_),
    .Q1(_03_),
    .R1(_04_),
    .S1(_05_),
    .T1(_06_),
    .U1(_07_)
  );
  assign f = _00_;
  assign g = _11_;
  assign h = _22_;
  assign i = _33_;
  assign j = _44_;
  assign k = _55_;
  assign l = _66_;
  assign m = _76_;
  assign n = _77_;
  assign o = _01_;
  assign p = _02_;
  assign q = _03_;
  assign r = _04_;
  assign s = _05_;
  assign t = _06_;
  assign u = _07_;
  assign out1 = _08_;
  assign out2 = _10_;
  assign out3 = _13_;
  assign out4 = _15_;
  assign out5 = _17_;
  assign out6 = _19_;
  assign out7 = _21_;
  assign out8 = _24_;
  assign out9 = _26_;
  assign out10 = _28_;
  assign out11 = _30_;
  assign out12 = _32_;
  assign out13 = _35_;
  assign out14 = _37_;
  assign out15 = _39_;
  assign out16 = _41_;
  assign out17 = _43_;
  assign out18 = _46_;
  assign out19 = _48_;
  assign out20 = _50_;
  assign out21 = _52_;
  assign out22 = _54_;
  assign out23 = _57_;
  assign out24 = _59_;
  assign out25 = _61_;
  assign out26 = _63_;
  assign out27 = _65_;
  assign out28 = _68_;
  assign out29 = _70_;
  assign out30 = _72_;
  assign out31 = _74_;
  assign Z = out31;
endmodule
